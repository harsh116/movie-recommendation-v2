{"version":3,"sources":["constants.js","Components/Search.js","Components/Tags.js","helper.js","Components/Main.js","Components/NavigatePages.js","Components/Spinner.js","App.js","Components/Similar.js","index.js"],"names":["IMG_URL","genres","id","name","Search","props","searchTerm","setSearchTerm","searchCount","setSearchCount","onSubmit","e","preventDefault","console","log","target","children","value","type","placeholder","class","Tag","genre","onClick","selectedGenre","setSelectedGenre","arr","length","push","includes","forEach","idx","splice","clickFn","className","isHighlighted","Tags","tagsList","map","fetchWithTimeout","resource","a","options","timeout","controller","AbortController","setTimeout","abort","fetch","signal","response","clearTimeout","Movie","vote","poster_path","title","vote_average","overview","useState","overviewElement","setOverviewElement","navigate","useNavigate","classList","add","encodeURI","state","onMouseLeave","remove","src","alt","Main","movieDataArray","setMovieDataArray","isHidden","setIsHidden","isHiddenNetworkError","setIsHiddenNetworkError","renderedMoviesState","setRenderedMovieState","page","setPageNumber","setIsHiddenNavigationPage","isSimilar","selectedMovieID","selectedMovieIDTitle","isMainHidden","setIsMainHidden","initialrenderSelectedGenre","useRef","initialrenderSearchTerm","useEffect","current","getMovies","data","incKey","pageN","method","headers","body","JSON","stringify","includeKey","then","res","json","results","filter","catch","err","window","scroll","top","left","behavior","movies","movieData","NavigatePages","pageNumber","isHiddenNavigationPage","Spinner","visible","text","classes","color","color1","height","width","style","App","Similar","useLocation","routing","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dba117a.chunk.js","sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst API_URL = BASE_URL + \"/discover/movie?sort_by=popularity.desc&\" + \"\";\r\nconst IMG_URL = \"https://image.tmdb.org/t/p/w500\";\r\nconst searchURL = BASE_URL + \"/search/movie?\" + \"\";\r\n\r\n// const HOST = \"http://localhost:8080\";\r\n// const HOST = \"http://192.168.29.234:8080\";\r\nconst HOST = \"\";\r\n\r\nconst genres = [\r\n  {\r\n    id: 28,\r\n    name: \"Action\",\r\n  },\r\n  {\r\n    id: 12,\r\n    name: \"Adventure\",\r\n  },\r\n  {\r\n    id: 16,\r\n    name: \"Animation\",\r\n  },\r\n  {\r\n    id: 35,\r\n    name: \"Comedy\",\r\n  },\r\n  {\r\n    id: 80,\r\n    name: \"Crime\",\r\n  },\r\n  {\r\n    id: 99,\r\n    name: \"Documentary\",\r\n  },\r\n  {\r\n    id: 18,\r\n    name: \"Drama\",\r\n  },\r\n  {\r\n    id: 10751,\r\n    name: \"Family\",\r\n  },\r\n  {\r\n    id: 14,\r\n    name: \"Fantasy\",\r\n  },\r\n  {\r\n    id: 36,\r\n    name: \"History\",\r\n  },\r\n  {\r\n    id: 27,\r\n    name: \"Horror\",\r\n  },\r\n  {\r\n    id: 10402,\r\n    name: \"Music\",\r\n  },\r\n  {\r\n    id: 9648,\r\n    name: \"Mystery\",\r\n  },\r\n  {\r\n    id: 10749,\r\n    name: \"Romance\",\r\n  },\r\n  {\r\n    id: 878,\r\n    name: \"Science Fiction\",\r\n  },\r\n  {\r\n    id: 10770,\r\n    name: \"TV Movie\",\r\n  },\r\n  {\r\n    id: 53,\r\n    name: \"Thriller\",\r\n  },\r\n  {\r\n    id: 10752,\r\n    name: \"War\",\r\n  },\r\n  {\r\n    id: 37,\r\n    name: \"Western\",\r\n  },\r\n];\r\n\r\nexport { BASE_URL, API_URL, searchURL, IMG_URL, genres, HOST };\r\n","import { useState } from \"react\";\r\nimport \"./Search.css\";\r\nimport \"../constants\";\r\n\r\nconst Search = (props) => {\r\n  const { searchTerm, setSearchTerm, searchCount, setSearchCount } = props;\r\n\r\n  const submitFn = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.children[0].value);\r\n    setSearchTerm(e.target.children[0].value);\r\n    setSearchCount(searchCount + 1);\r\n    e.target.children[0].value = \"\";\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <form id=\"form\" onSubmit={submitFn}>\r\n        <input type=\"text\" placeholder=\"Search\" id=\"search\" class=\"search\" />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useState } from \"react\";\r\nimport \"./Tags.css\";\r\nimport { genres } from \"../constants\";\r\n\r\nconst Tag = (props) => {\r\n  const isHighlighted = () => {\r\n    const id = props.genre.id;\r\n    const arr = props.selectedGenre;\r\n\r\n    return arr.includes(id);\r\n  };\r\n\r\n  let { genre } = props;\r\n  const clickFn = (selectedGenre, setSelectedGenre) => {\r\n    let arr = [...selectedGenre];\r\n\r\n    if (arr.length == 0) {\r\n      arr.push(genre.id);\r\n    } else {\r\n      if (arr.includes(genre.id)) {\r\n        arr.forEach((id, idx) => {\r\n          if (id == genre.id) {\r\n            arr.splice(idx, 1);\r\n          }\r\n        });\r\n      } else {\r\n        arr.push(genre.id);\r\n      }\r\n    }\r\n    setSelectedGenre(arr);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        clickFn(props.selectedGenre, props.setSelectedGenre);\r\n      }}\r\n      className={`tag ${isHighlighted() ? \"highlight\" : \"\"}`}\r\n      id={genre.id}\r\n    >\r\n      {genre.name}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Tags(props) {\r\n  let tagsList = genres.map((genre) => {\r\n    return (\r\n      <Tag\r\n        genre={genre}\r\n        selectedGenre={props.selectedGenre}\r\n        setSelectedGenre={props.setSelectedGenre}\r\n      />\r\n    );\r\n  });\r\n\r\n  const clearGenres = () => {\r\n    props.setSelectedGenre([]);\r\n  };\r\n\r\n  const isClearHidden = () => {\r\n    if (props.selectedGenre.length === 0) return true;\r\n    else return false;\r\n  };\r\n\r\n  return (\r\n    <div id=\"tags\">\r\n      {tagsList}\r\n      <div\r\n        className={`tag highlight ${isClearHidden() ? \"none\" : \"\"}`}\r\n        id=\"clear\"\r\n        onClick={clearGenres}\r\n      >\r\n        Clear x\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tags;\r\n","async function fetchWithTimeout(resource, options = {}) {\r\n  const { timeout = 8000 } = options;\r\n\r\n  const controller = new AbortController();\r\n  const id = setTimeout(() => controller.abort(), timeout);\r\n  const response = await fetch(resource, {\r\n    ...options,\r\n    signal: controller.signal,\r\n  });\r\n  clearTimeout(id);\r\n  return response;\r\n}\r\n\r\nexport { fetchWithTimeout };\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Main.scss\";\r\nimport { HOST, IMG_URL } from \"../constants\";\r\nimport { fetchWithTimeout } from \"../helper\";\r\n\r\nconst Movie = (props) => {\r\n  const { poster_path, title, vote_average, overview } = props;\r\n  const [overviewElement, setOverviewElement] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const getColor = (vote) => {\r\n    if (vote >= 8) {\r\n      return \"green\";\r\n    } else if (vote >= 5) {\r\n      return \"orange\";\r\n    } else {\r\n      return \"red\";\r\n    }\r\n  };\r\n\r\n  const NavigateToSimilar = (e) => {\r\n    // setRenderedMovieState(\"Similar\");\r\n    // debugger;\r\n    // console.log(\"Movie props: \", props);\r\n    console.log(e.target.className);\r\n    if (e.target.className === \"overview\") {\r\n      e.target.classList.add(\"clicked\");\r\n      setOverviewElement(e.target);\r\n      return;\r\n    }\r\n    navigate(`/Similar/${encodeURI(title)}`, {\r\n      state: props,\r\n    });\r\n  };\r\n\r\n  const resetOverViewState = () => {\r\n    if (overviewElement) {\r\n      overviewElement.classList.remove(\"clicked\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"movie\"\r\n      onClick={NavigateToSimilar}\r\n      onMouseLeave={resetOverViewState}\r\n    >\r\n      <div class=\"movie_img\">\r\n        <img\r\n          src={`${\r\n            poster_path\r\n              ? IMG_URL + poster_path\r\n              : \"http://via.placeholder.com/1080x1580\"\r\n          }`}\r\n          alt={title}\r\n        />\r\n        <div className=\"overview\">\r\n          <h3>Overview</h3>\r\n          {overview}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"movie-info\">\r\n        <h3 class=\"pointTitle\">{title}</h3>\r\n        <span className={getColor(vote_average)}>{vote_average}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction Main(props) {\r\n  const [movieDataArray, setMovieDataArray] = useState([]);\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  const [isHiddenNetworkError, setIsHiddenNetworkError] = useState(true);\r\n\r\n  // possible rendered states: initial, discovered, searched,similar\r\n  const [renderedMoviesState, setRenderedMovieState] = useState(\"initial\");\r\n  const {\r\n    selectedGenre,\r\n    searchTerm,\r\n    page,\r\n    setPageNumber,\r\n    setIsHiddenNavigationPage,\r\n    searchCount,\r\n    isSimilar,\r\n    selectedMovieID,\r\n    selectedMovieIDTitle,\r\n    isMainHidden,\r\n    setIsMainHidden,\r\n  } = props;\r\n\r\n  const initialrenderSelectedGenre = useRef(true);\r\n  const initialrenderSearchTerm = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (initialrenderSelectedGenre.current) {\r\n      initialrenderSelectedGenre.current = false;\r\n      return;\r\n    }\r\n\r\n    getMovies(selectedGenre, \"discover\");\r\n    setPageNumber(1);\r\n\r\n    console.log(\"getMovies selectedGenre\");\r\n  }, [selectedGenre]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"searchTerm change\");\r\n    if (initialrenderSearchTerm.current) {\r\n      initialrenderSearchTerm.current = false;\r\n      return;\r\n    }\r\n\r\n    console.log(\"getMovies searchterm\");\r\n    if (searchTerm.length === 0) {\r\n      getMovies(null, null, false);\r\n    } else {\r\n      getMovies(searchTerm, \"search\");\r\n    }\r\n    setPageNumber(1);\r\n  }, [searchTerm, searchCount]);\r\n\r\n  const getMovies = (data, type, incKey = true, pageN = \"1\") => {\r\n    console.log(\"getmovies: \", data);\r\n    if (incKey === false) {\r\n      setRenderedMovieState(\"initial\");\r\n    } else if (type === \"discover\") {\r\n      setRenderedMovieState(\"discovered\");\r\n    } else if (type === \"search\") {\r\n      setRenderedMovieState(\"searched\");\r\n    }\r\n\r\n    setIsMainHidden(true);\r\n    fetchWithTimeout(`${HOST}/movieData`, {\r\n      method: \"POST\",\r\n      timeout: 6000,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        data,\r\n        includeKey: incKey,\r\n        type,\r\n        page: pageN,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setIsMainHidden(false);\r\n        console.log(data.results);\r\n        setIsHiddenNetworkError(true);\r\n        data.results = data.results.filter((res) => res !== null);\r\n        if (data.results && data.results.length > 0) {\r\n          setIsHidden(true);\r\n          setIsHiddenNavigationPage(false);\r\n          setMovieDataArray(data.results);\r\n        } else {\r\n          setIsHidden(false);\r\n          setIsHiddenNavigationPage(true);\r\n          setMovieDataArray(data.results);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsMainHidden(false);\r\n        console.log(\"err: \", err);\r\n        setMovieDataArray([]);\r\n        setIsHiddenNavigationPage(true);\r\n        setIsHiddenNetworkError(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"page changed\");\r\n    if (renderedMoviesState === \"initial\") {\r\n      getMovies(null, null, false, page);\r\n    } else if (renderedMoviesState === \"discovered\") {\r\n      getMovies(selectedGenre, \"discover\", true, page);\r\n    } else if (renderedMoviesState === \"searched\") {\r\n      getMovies(searchTerm, \"search\", true, page);\r\n    }\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    console.log(isSimilar);\r\n    console.log(\"getmovies initial\");\r\n    if (isSimilar === false) {\r\n      getMovies(null, null, false);\r\n    } else {\r\n      console.log(\"similar\");\r\n      window.scroll({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n      getMovies({ selectedMovieID, selectedMovieIDTitle }, \"similar\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isSimilar !== false) {\r\n      window.scroll({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n      getMovies({ selectedMovieID, selectedMovieIDTitle }, \"similar\");\r\n    }\r\n  }, [selectedMovieID]);\r\n\r\n  const movies = movieDataArray.map((movieData) => {\r\n    return (\r\n      <Movie\r\n        title={movieData.title}\r\n        poster_path={movieData.poster_path}\r\n        vote_average={movieData.vote_average}\r\n        overview={movieData.overview}\r\n        id={movieData.id}\r\n      ></Movie>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <main className={`${isMainHidden ? \"none\" : \"\"}`} id=\"main\">\r\n      {movies}\r\n      <h1 className={`no-results ${isHidden ? \"none\" : \"\"}`}>\r\n        No Results Found\r\n      </h1>\r\n      <h2 className={`no-results ${isHiddenNetworkError ? \"none\" : \"\"}`}>\r\n        <span className=\"red large\">OOPS!</span>\r\n        <br />\r\n        Something is Wrong\r\n      </h2>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import { useState } from \"react\";\r\nimport \"./NavigatePages.scss\";\r\n\r\nconst NavigatePages = (props) => {\r\n  const { pageNumber, setPageNumber, isHiddenNavigationPage } = props;\r\n\r\n  return (\r\n    <div\r\n      className={`navigatePagesSection ${isHiddenNavigationPage ? \"none\" : \"\"}`}\r\n    >\r\n      <div className=\"navigatePagesBox\">\r\n        <button\r\n          className=\"navigatePrev round\"\r\n          onClick={() => {\r\n            if (pageNumber > 1) {\r\n              setPageNumber(pageNumber - 1);\r\n            }\r\n          }}\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <span className=\"pageNumber\">{pageNumber + \"\"}</span>\r\n        <button\r\n          className=\"navigateNext round\"\r\n          onClick={() => {\r\n            if (pageNumber < 500) {\r\n              setPageNumber(pageNumber + 1);\r\n            }\r\n          }}\r\n        >\r\n          {\">\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigatePages;\r\n","import \"./Spinner.scss\";\r\n\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction Spinner(props) {\r\n  const { visible, text, type } = props;\r\n  let classes = props.classes || \"\";\r\n  const color = props.color || \"#fff\";\r\n  let color1 = props.color;\r\n  //   console.log(\"is spinner visible: \", visible);\r\n  return (\r\n    <div className={`Spinner ${classes} ${visible ? \"flex\" : \"none\"}`}>\r\n      <Loader\r\n        type={type}\r\n        color={color}\r\n        height={50}\r\n        width={50}\r\n        timeout={0} //30 secs\r\n      />\r\n      <span style={color1 ? { color: color } : {}} class=\"Loading_Text\">\r\n        {text}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","// import logo from \"./logo.svg\";\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport \"./App.scss\";\n\nimport Search from \"./Components/Search\";\nimport Tags from \"./Components/Tags\";\nimport Main from \"./Components/Main\";\nimport NavigatePages from \"./Components/NavigatePages\";\nimport Spinner from \"./Components/Spinner\";\n\nimport Tippy from \"@tippyjs/react\";\nimport \"tippy.js/dist/tippy.css\";\n\nfunction App() {\n  const [selectedGenre, setSelectedGenre] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchCount, setSearchCount] = useState(0);\n\n  const [isHiddenNavigationPage, setIsHiddenNavigationPage] = useState(true);\n  const [isMainHidden, setIsMainHidden] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Search\n        setSearchCount={setSearchCount}\n        searchCount={searchCount}\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n      />\n      <Tags selectedGenre={selectedGenre} setSelectedGenre={setSelectedGenre} />\n      <Spinner\n        visible={isMainHidden}\n        text={\"Loading Movies\"}\n        type={\"TailSpin\"}\n      />\n      <Main\n        isMainHidden={isMainHidden}\n        setIsMainHidden={setIsMainHidden}\n        page={pageNumber}\n        setPageNumber={setPageNumber}\n        selectedGenre={selectedGenre}\n        searchTerm={searchTerm}\n        setIsHiddenNavigationPage={setIsHiddenNavigationPage}\n        searchCount={searchCount}\n        isSimilar={false}\n        selectedMovieID={\"\"}\n      />\n      <NavigatePages\n        isHiddenNavigationPage={isHiddenNavigationPage}\n        pageNumber={pageNumber}\n        setPageNumber={setPageNumber}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nimport \"./Main.scss\";\r\nimport \"./Similar.scss\";\r\nimport Main from \"./Main\";\r\nimport Spinner from \"./Spinner\";\r\nimport { HOST, IMG_URL } from \"../constants\";\r\n\r\nconst Similar = (props) => {\r\n  const { state } = useLocation();\r\n  const navigate = useNavigate();\r\n  //   console.log(\"state: \", state);\r\n\r\n  const { poster_path, title, vote_average, overview, id } = state;\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [isHiddenNavigationPage, setIsHiddenNavigationPage] = useState(true);\r\n  const [isMainHidden, setIsMainHidden] = useState(true);\r\n\r\n  const getColor = (vote) => {\r\n    if (vote >= 8) {\r\n      return \"green\";\r\n    } else if (vote >= 5) {\r\n      return \"orange\";\r\n    } else {\r\n      return \"red\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Similar\">\r\n      <button\r\n        onClick={() => {\r\n          navigate(\"/\");\r\n        }}\r\n        className=\"homebtn topLeft\"\r\n      >\r\n        Home\r\n      </button>\r\n      <div className=\"mainMovieSection\">\r\n        <div className=\"movie\">\r\n          <div class=\"movie_img\">\r\n            <img\r\n              src={`${\r\n                poster_path\r\n                  ? IMG_URL + poster_path\r\n                  : \"http://via.placeholder.com/1080x1580\"\r\n              }`}\r\n              alt={title}\r\n            />\r\n            <div className=\"overview\">\r\n              <h3>Overview</h3>\r\n              {overview}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            <span className={getColor(vote_average)}>{vote_average}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"movieHeadingSection\">\r\n        <div className=\"movieHeadingBox\">\r\n          <h3 className=\"movieHeading\">\r\n            {`Movies Similar to `}{\" \"}\r\n            <span className=\"highlightHeading\">{title}</span>{\" \"}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"spinnerSection\">\r\n        <Spinner\r\n          visible={isMainHidden}\r\n          text={\"Loading Movies\"}\r\n          type={\"TailSpin\"}\r\n        />\r\n      </div>\r\n      <Main\r\n        isMainHidden={isMainHidden}\r\n        setIsMainHidden={setIsMainHidden}\r\n        page={pageNumber}\r\n        setPageNumber={setPageNumber}\r\n        setIsHiddenNavigationPage={setIsHiddenNavigationPage}\r\n        isSimilar={true}\r\n        selectedMovieID={id}\r\n        selectedMovieIDTitle={title}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Similar;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Route, Routes, Link, BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport Similar from \"./Components/Similar\";\n\nconst routing = (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />} />\n      <Route path=\"/Similar/:name\" element={<Similar />} />\n    </Routes>\n  </Router>\n);\n\nReactDOM.render(\n  // <React.StrictMode>\n  routing,\n  /* </React.StrictMode> */\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}